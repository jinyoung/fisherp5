아래의 이벤트스토밍 모델을 구현한 코드를 생성해줘:

{"_type":"BoundedContext","name":"purchase","aggregates":[{"aggregateRoot":{"_type":"AggregateRoot","fieldDescriptors":[{"className":"Long","name":"purchaseNo","_type":"FieldDescriptor"},{"className":"String","name":"purchaseType","displayName":"매입구분","_type":"FieldDescriptor"},{"className":"LocalDate","name":"purchaseDate","displayName":"매입일자","_type":"FieldDescriptor"},{"className":"LocalDate","name":"warehouseArrivalDate","displayName":"입고일자","_type":"FieldDescriptor"},{"className":"LocalDate","name":"storageFeePaymentDate","displayName":"보관료부담일자","_type":"FieldDescriptor"},{"className":"Boolean","name":"storageFeePaymentStatus","displayName":"보관료부담여부","_type":"FieldDescriptor"},{"className":"String","name":"mainShipName","displayName":"본선명","_type":"FieldDescriptor"},{"className":"String","name":"productName","displayName":"품명","_type":"FieldDescriptor"},{"_type":"FieldDescriptor","name":"accountId","className":"AccountId","displayName":"매입처"},{"_type":"FieldDescriptor","name":"purchaseDetails","className":"List<PurchaseDetail>"}]},"commands":[{"_type":"Command","fieldDescriptors":[],"name":"CreatePurchase","displayName":"매입 생성"},{"_type":"Command","name":"sale","fieldDescriptors":[{"_type":"FieldDescriptor","name":"itemId","className":"String"},{"_type":"FieldDescriptor","name":"qty","className":"Integer"}]}],"events":[{"fieldDescriptors":[{"className":"String","name":"purchaseType","displayName":"매입구분","_type":"FieldDescriptor"},{"className":"LocalDate","name":"purchaseDate","_type":"FieldDescriptor","displayName":"매입일자"},{"className":"LocalDate","name":"warehouseArrivalDate","_type":"FieldDescriptor","displayName":"입고일자"},{"className":"LocalDate","name":"storageFeePaymentDate","_type":"FieldDescriptor","displayName":"보관료부담일자"},{"className":"Boolean","name":"storageFeePaymentStatus","_type":"FieldDescriptor","displayName":"보관료부담여부"},{"className":"String","name":"mainShipName","_type":"FieldDescriptor","displayName":"본선명"},{"className":"String","name":"productName","_type":"FieldDescriptor","displayName":"품명"},{"className":"AccountId","name":"accountId","_type":"FieldDescriptor","displayName":"매입처"},{"className":"List<PurchaseDetail>","name":"purchaseDetails","_type":"FieldDescriptor"}],"name":"PurchaseCreated","_type":"Event"},{"_type":"Event","name":"FishSold","fieldDescriptors":[{"_type":"FieldDescriptor","name":"itemId","className":"String"},{"_type":"FieldDescriptor","name":"stock","className":"Integer"}]}],"name":"Purchase","displayName":"매입","_type":"Aggregate"}],"policies":[]}




구현 아키텍처와 사용기술은 아래와 같아:

- clean architecture
- spring-boot3
- JPA (must use package jakarta.persistence.* instead of javax.persistence.*)
- H2 DB
- Lombok
- Kafka with spring-cloud-streams library
- JUnit Test


